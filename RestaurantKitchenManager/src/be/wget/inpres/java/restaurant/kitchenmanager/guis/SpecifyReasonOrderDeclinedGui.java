/*
 * Copyright (C) 2018 wget
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package be.wget.inpres.java.restaurant.kitchenmanager.guis;

import be.wget.inpres.java.restaurant.config.RestaurantConfig;
import javax.swing.JOptionPane;

/**
 *
 * @author wget
 */
public class SpecifyReasonOrderDeclinedGui extends javax.swing.JDialog {

    RestaurantConfig applicationConfig;
    /**
     * Creates new form OrderRefusedReasonGui
     */
    public SpecifyReasonOrderDeclinedGui(java.awt.Frame parent, RestaurantConfig config) {
        super(parent, true);
        initComponents();
        setLocationRelativeTo(null);
        this.applicationConfig = config;
    }
    
    public String getOrderRefusedReason() {
        return this.orderRefusedReasonTextarea.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderRefusedLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderRefusedReasonTextarea = new javax.swing.JTextArea();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        orderRefusedLabel.setText("Reason why the order is refused:");

        orderRefusedReasonTextarea.setColumns(20);
        orderRefusedReasonTextarea.setRows(5);
        jScrollPane1.setViewportView(orderRefusedReasonTextarea);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(orderRefusedLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orderRefusedLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (this.getOrderRefusedReason().toLowerCase().contains(
                applicationConfig.getOrderFieldDelimiter().toLowerCase()) ||
            this.getOrderRefusedReason().toLowerCase().contains(
                applicationConfig.getOrderLineDelimiter().toLowerCase()) ||
            this.getOrderRefusedReason().toLowerCase().contains("\\n") ||
            this.getOrderRefusedReason().toLowerCase().contains("\\r")) {
            JOptionPane.showMessageDialog(getParent(),
                "The reason you typed cannot contain the following strings: \""
                    + this.applicationConfig.getOrderFieldDelimiter().toLowerCase()
                    + " \" and \""
                    + this.applicationConfig.getOrderLineDelimiter().toLowerCase()
                    + "\" nor new line characters.",
                "Invalid characters",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel orderRefusedLabel;
    private javax.swing.JTextArea orderRefusedReasonTextarea;
    // End of variables declaration//GEN-END:variables
}
